{"version":3,"sources":["components/Navbar.js","components/Home.js","components/ShowResponse.js","components/Dashboard.js","components/Register.js","components/Login.js","components/Question.js","components/CreateTest.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","history","useHistory","log","setLog","useState","useEffect","token","localStorage","getItem","JSON","parse","atob","split","login","document","getElementById","register","style","display","removeItem","_jsx","_Fragment","children","_jsxs","class","Link","fontSize","to","color","type","marginLeft","id","onClick","handleLogout","push","Home","className","src","frameBorder","title","ShowResponse","answer","setAnswer","response","map","value","index","ans","console","email","question","width","rows","options","value1","i","checked","num","toString","includes","name","fontWeight","Dashboard","allforms","setAllforms","setResponse","setQuestion","user","fetch","method","headers","body","stringify","then","res","json","data","form","alert","length","margin","padding","formtitle","textAlign","_id","float","Register","setRegister","handleChange","e","target","password","placeholder","onChange","handleRegister","validator","isEmail","message","Login","setLogin","window","location","hostname","handleLogin","setItem","Question","option","setOption","alloption","setAllOption","checkbox","setCheckbox","allcheckbox","setAllCheckbox","image","setImage","handleDeleteOption","arr","filter","border","borderBottom","backgroundColor","handleSave","CreateTest","test","setTest","authorid","setAuthorid","ques","setQues","setType","formdescription","handleDeleteQuestion","height","newvalue","newQuestion","handlePublish","formlink","host","formid","Form","useParams","responses","setResponses","setEmail","loading","setLoading","setForm","handleSubmit","handleResponse","indexOf","newarray","splice","ReactLoading","App","BrowserRouter","Switch","Route","path","exact","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode"],"mappings":"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","file":"static/js/main.3a5f9a98.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {decode as atob} from 'base-64'\nimport \"./Navbar.css\"\nexport default function Navbar(props){\n\n  let history = useHistory();\n\n  var [log, setLog] = useState(0);\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      const user = JSON.parse(atob(token.split(\".\")[1]));\n      if (!user) {\n        localStorage.removeItem(\"token\");\n      } else {\n        const login = document.getElementById(\"login\");\n        const register = document.getElementById(\"register\");\n        login.style.display = \"none\";\n        register.style.display = \"none\";\n        const logout = document.getElementById(\"logout\");\n        logout.style.display = \"block\";\n      }\n    } else {\n      const logout = document.getElementById(\"logout\");\n      logout.style.display = \"none\";\n      const login = document.getElementById(\"login\");\n      const register = document.getElementById(\"register\");\n      login.style.display = \"block\";\n      register.style.display = \"block\";\n    }\n  }, [log,props.login]);\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    setLog(1);\n    history.push(\"/\");\n  };\n\n    return(\n        <>\n        <nav class=\"navbar navbar-expand-lg text-dark p-3 shadow   \" >\n  <Link class=\"navbar-brand text-light\" style={{fontSize : \"30px\"}} to = \"/\">ZA-<span style={{color : \"white\"}}>Form</span></Link>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" style={{marginLeft : \"40%\"}} id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav  mr-auto\">\n      <li class=\"nav-item mx-4 active\">\n        <Link class=\"nav-link text-light  fs-5  fw-2\" to = \"/home\">Home</Link>\n      </li>\n      <li class=\"nav-item mx-4 active\">\n        <Link class=\"nav-link text-light  fs-5  fw-2\" to = \"/CreateTest\">CreateForm</Link>\n      </li>\n      <li class=\"nav-item mx-4\">\n        <Link class=\"nav-link text-light  fs-5  fw-2\" id = 'login' to = \"/login\">Login</Link>\n      </li>\n      <li class=\"nav-item mx-4\">\n        <Link class=\"nav-link text-light  fs-5  fw-2\" id='register' to = \"/register\">Register</Link>\n      </li>\n      <li class=\"nav-item ms-5\">\n            <button\n              class=\"nav-link text-light  ms-5 btn  fs-5  fw-1 \"\n              style={{ display: \"none\" }}\n              id=\"logout\"\n              onClick={handleLogout}\n            >\n              Logout\n            </button>\n          </li>\n    </ul>\n  </div>\n</nav>\n</>\n    )\n}","import React from \"react\";\nimport \"./Home.css\";\n\nexport default function Home() {\n  return (\n    <div className=\"home-container\">\n      <iframe\n        className=\"background-iframe\"\n        src=\"https://my.spline.design/untitled-f97c8e677d8dc13b0a32808689accdca/\"\n        frameBorder=\"0\"\n        title=\"background\"\n      ></iframe>\n\n      <div className=\"foreground-content text-center \">\n        <h1 className=\"text-center display-1 fw-bold lead text-light\">\n          Ziegler Aerospace\n        </h1>\n        <h2 className=\"text-light\">Ziegler Forms</h2>\n        <p className=\"lead mt-4 \">\n          Ziegler-Form is a clone of real Google Forms. Create your own tests\n          and forms and check the responses.\n        </p>\n        <div >\n        <h2 className=\"text-light \">How To Get Started</h2>\n        <p className=\"lead mt-4 \">\n          If you don't have an account, start by registering with your name,\n          email, and setting a password. After publishing a test, you’ll get a\n          link to share and gather responses.\n        </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\n\n\nexport default function ShowResponse(props) {\n\n    const [answer,setAnswer] = useState([]);\n\n    const handleAnswer = (ans) => {\n        console.log(ans);\n        setAnswer(ans);\n    }\n\n\n    return (<div className=\"container-fluid\">\n        <div className=\"row\">\n        <div className=\"col-sm-3 mx-auto my-2\">    \n        <div className=\"scrolling-area\">\n            <div className=\"scrolling-element-inside\">\n            <h1 className=\"fs-3 text-secondary\">Responses</h1> \n             {\n            props.response.map((value,index) => {\n                return(<button className=\"btn btn-outline-secondary my-2\" onClick={() => {handleAnswer(value.answer)}}>{value.email}</button>)\n            })\n        } \n            </div>\n        </div>\n        </div>\n        <div className=\"col-sm-8 mx-auto my-2\">\n        <div className=\"scrolling-area-1\">\n            <div className=\"scrolling-element-inside\">\n                <h1 className=\"text-secondary text-center fs-3\">Answers</h1>\n             {\n                props.question.map((value,index) => {\n                    if (value.type == \"text\") {\n                        let ans = \" \";\n                        \n                        if (answer[index] == null){\n                            ans = \" \";\n                        }else{\n                            ans = answer[index];\n\n                        }\n                        return (\n                          <div class=\"card mx-auto my-3 text-light\" style={{ width: \"70%\" }}>\n                            <div class=\"card-body shadow\">\n                              <p\n                                className=\"fw-bold text-dark fs-4\"\n                              >\n                                {value.question}\n                              </p>\n                              <textarea\n                                class=\"form-control  mb-2\"\n                                id=\"exampleFormControlTextarea1\"\n                                rows=\"3\"\n                                value = {ans}\n                              ></textarea>\n                            </div>\n                          </div>\n                        );\n                      } else {\n                        return (\n                          <div class=\"card mx-auto my-3 text-light\" style={{ width: \"60%\" }}>\n                            <div class=\"card-body shadow\">\n                              <div className=\"my-3\">\n                                <p\n                                 className=\"fw-bold fs-4 text-dark\"\n                                >\n                                  {value.question}\n                                </p>\n                              </div>\n              \n                              {value.options.map((value1, i) => {\n\n                                let checked = false;\n\n                                  if(answer[index] == i && value.type == \"radio\"){\n                                        checked = true;\n                                    }\n                                \n                                if(typeof answer[index] !== \"undefined\" && value.type == \"checkbox\" && answer[index] !== null){\n                                    let num = i.toString();\n                                    if(answer[index].includes(num)){\n                                        checked = true;\n                                    }\n                                }\n                                return (\n                                  <div className=\"my-3\">\n                                    <input type={value.type} name={index} checked = {checked}/>\n                                    <label\n                                      className=\"mx-3\"\n                                      style={{\n                                        fontSize: \"20px\",\n                                        color: \"black\",\n                                        fontWeight: \"100\",\n                                      }}\n                                    >\n                                      {value1}\n                                    </label>\n                                  </div>\n                                );\n                              })}\n                            </div>\n                          </div>\n                        );\n                      }\n                    })}\n            </div>\n        </div>\n        </div>\n        </div>\n    </div>\n    )\n}","import React from \"react\";\nimport {useState,useEffect} from \"react\"\nimport {decode as atob} from 'base-64'\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\"\nimport ShowResponse from \"./ShowResponse\";\n\nexport default function Dashboard(){\n\n    let history = useHistory();\n\n    const [allforms,setAllforms] = useState([]);\n\n    const [response,setResponse] = useState([]);\n\n    const [question,setQuestion] = useState([]);\n\n    useEffect(() => {\n        const token = localStorage.getItem('token')\n    if(token){\n    const user = JSON.parse(atob(token.split('.')[1]));\n      if(!user){\n        localStorage.removeItem('token')\n        console.log(user,\"Yo it is not user\")\n        history.push(\"/login\")\n      }else{\n        fetch(\"getForms\",{\n          method : \"POST\",\n          headers : {\n            \"Content-Type\" : \"application/json\"\n          },\n          body : JSON.stringify({id : user.id})\n        }).then((res) => {\n            return res.json();\n        }).then((data) => {\n          setAllforms(data.form);\n        })\n      }\n    }else{\n        alert(\"You Are not logged In\")\n        history.push(\"/login\")\n    }    \n    },[])\n\n\n    const handleResponse = (res) => {\n      if(res.length == 0){\n        alert(\"It does not have any response\")\n      }else{\n        setResponse(res)\n        \n      }\n      \n    }\n\n    if(response.length === 0){\n\n    return(\n      <div className=\"container-fluid\" style={{margin : \"0px\",padding : \"0px\"}}>\n        <div >\n       <h1 className=\"mx-5 text-center mt-5 lead display-5 text-secondary\" >Your Forms</h1>\n        </div>\n        \n        <div className=\"container-fluid\">\n        {\n          allforms.map((value,index) => {\n            return (<div className=\"row m-5 shadow rounded p-3\" style={{width : \"90%\"}}>\n              <div className=\"col-sm-3 mx-auto \">\n              <label className=\"fs-2 text-secondary\">{value.formtitle}</label>\n              </div>\n              <div className=\"col-sm-3 my-3 mx-auto\">\n              <Link className=\"btn btn-outline-secondary dashboard\" style={{marginLeft : \"20%\",textAlign : \"left\"}} to = {`/fillingform/${value._id}`}>Show Preview<span style={{float : \"right\"}}>{\"->\"}</span></Link>\n              </div>\n              <div className=\"col-sm-3 my-3 mx-auto\">\n              <button className=\"btn btn-outline-secondary dashboard\" style={{marginLeft : \"20%\",textAlign : \"left\"}} onClick={() => {handleResponse(value.response); setQuestion(value.question)}}>Show Response<span style={{float : \"right\"}}>{\"->\"}</span></button>\n              </div>\n              </div>\n            )\n          })\n        }\n        </div>\n      </div>\n    )\n  } else {\n    return <ShowResponse response = {response} question = {question}/>\n  }  \n}","import React from \"react\";\nimport {useState} from \"react\"\nimport { useHistory } from \"react-router-dom\";\nimport validator from 'validator';\nimport \"./Login.css\"\nexport default function Register() {\n\n  const [register,setRegister] = useState({})\n\n  const history = useHistory();\n\n  const handleChange = (e) => {\n    if(e.target.name == 'name'){\n      register.name = e.target.value;\n    } else if(e.target.name == 'email'){\n      register.email = e.target.value;\n    } else if(e.target.name == 'password'){\n      register.password = e.target.value;\n    }\n\n    setRegister(register)\n  }\n\n  const handleRegister = () => {\n    if(!validator.isEmail(register.email)){\n      var error = document.getElementById(\"error\")\n      error.style.display = \"block\";\n    }\n    else{\n     \n      fetch('/auth/register',{\n        method : \"POST\",\n        headers : {\n          \"Content-Type\" : \"application/json\"\n        },\n        body : JSON.stringify(register)\n      }).then((res) => {\n        return res.json()\n      }).then((data) => {\n        if(data.message == \"user already exists\"){\n          var error = document.getElementById(\"error-user\")\n          error.style.display = \"block\";\n        }\n        else if (data.message == \"Registered\"){\n          alert(\"Succesfully Registered\")\n          // navigate(\"/login\", { replace: true })\n          history.push('/login')\n        }\n      })\n    }\n  }\n\n  return (\n    <div className=\"container-fluid \">\n      <br/>\n      <br/>\n      <br/>\n      <div className=\"row \">\n        <div className=\"col-sm-6 mx-auto text-black shadow-lg p-3 frm\">\n          <h1 className=\"text-center lead display-3 text-success p-1\">Register</h1>\n          <p className=\"text-center text-secondary  p-3\">\n            You can simply register by using name,email and setting up the\n            password.\n          </p>\n          <div className=\"row\">\n            <p style={{display : \"none\", color : \"red\"}} id = \"error-user\">*User already exists</p>\n            <div className=\"col-2 text-center\">\n              <h5 className=\"lead\">Name :</h5>\n            </div>\n            <div className=\"col-9\">\n              <input\n                type=\"text\"\n                placeholder=\"Write Your Name Here\"\n                className=\"form-control\"\n                name= \"name\"\n                onChange={(e) => {handleChange(e)}}\n              />\n            </div>\n          </div>\n          <br/>\n          <div className=\"row\">\n            <div className=\"col-2 text-center\">\n              <h5 className=\"lead \">Email :</h5>\n            </div>\n            <div className=\"col-9\">\n              <input\n                type={\"text\"}\n                placeholder=\"Write Your Email Here\"\n                className=\"form-control\"\n                name= \"email\"\n                onChange={(e) => {handleChange(e)}}\n              />\n            </div>\n            <p style={{display : \"none\", color : \"red\"}} id = \"error\">*Email id is not correct</p>\n          </div>\n          <br/>\n          <div className=\"row\">\n            <div className=\"col-2 text-center\">\n              <h5 className=\"lead\">Set Password: </h5>\n            </div>\n            <div className=\"col-9\">\n              <input\n                type={\"password\"}\n                placeholder=\"Set Your Password Here\"\n                className=\"form-control\"\n                name= \"password\"\n                onChange={(e) => {handleChange(e)}}\n              />\n            </div>\n          </div>\n          <br/>\n          <button className=\"btn btn-outline-success p-3 fw-bold mx-2\" onClick={handleRegister}>Register</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport validator from \"validator\";\nimport Register from \"./Register\";\nimport \"./Login.css\"\nexport default function Login(props) {\n  const [login, setLogin] = useState({});\n\n  let history = useHistory();\n\n  const handleChange = (e) => {\n    if (e.target.name == \"email\") {\n      login.email = e.target.value;\n    } else if (e.target.name == \"password\") {\n      login.password = e.target.value;\n    }\n    setLogin(login);\n  };\n  console.log(window.location.hostname)\n  const handleLogin = () => {\n    if (!validator.isEmail(login.email)) {\n      var error = document.getElementById(\"error\");\n      error.style.display = \"block\";\n    } else {\n      fetch(\"/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(login),\n      })\n        .then((res) => {\n          return res.json();\n        })\n        .then((data) => {\n          if (data.message == \"Password Incorrect\") {\n            var error = document.getElementById(\"error-user\");\n            error.style.display = \"block\";\n          } else if (data.message == \"User does not exist\") {\n            var error = document.getElementById(\"error-new\");\n            error.style.display = \"block\";\n          } else if (data.message == \"Logged In\") {\n            localStorage.setItem(\"token\", data.token);\n            alert(\"Succesfully Logged In\");\n            props.handleLogin();\n            history.push(\"/home\");\n          }\n        });\n    }\n  };\n\n  return (<>\n    <div className=\"container-fluid\">\n      <br/>\n      <br/>\n      <br/>\n      <div className=\"row\">\n        <div className=\"col-sm-6 mx-auto text-black shadow-lg p-5 rounded frm\">\n          <h1 className=\"text-center lead display-3 text-success fw-1\">Login</h1>\n          <br />\n          <div className=\"row d-flex justify-content-center\">\n            <p style={{ display: \"none\", color: \"red\" }} id=\"error-new\">\n              *User does not exist\n            </p>\n            <div className=\"col-2 p-2\">\n              <h5 className=\"lead\">Email :</h5>\n            </div>\n            <div className=\"col-9\">\n              <input\n                type={\"email\"}\n                placeholder=\"Write Your Email Here\"\n                className=\"form-control p-2\"\n                name=\"email\"\n                onChange={(e) => {\n                  handleChange(e);\n                }}\n              />\n            </div>\n            <p style={{ display: \"none\", color: \"red\" }} id=\"error\">\n              *Email id is not valid\n            </p>\n          </div>\n          <br />\n          <div className=\"row d-flex justify-content-center\">\n            <div className=\"col-2 p-2\">\n              <h5 className=\"lead\">Password:</h5>\n            </div>\n            <div className=\"col-9\">\n              <input\n                type={\"password\"}\n                placeholder=\"Set Your Password Here\"\n                className=\"form-control p-2\"\n                name=\"password\"\n                onChange={(e) => {\n                  handleChange(e);\n                }}\n              />\n            </div>\n            <p style={{ display: \"none\", color: \"red\" }} id=\"error-user\">\n              *Password Incorrect\n            </p>\n          </div>\n          <br />\n          <button\n            className=\"btn btn-outline-success p-3 fw-bold mx-3\"\n            onClick={handleLogin}\n          >\n            Login\n          </button>\n        </div>\n      </div>\n    </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nexport default function Question(props) {\n  const [option, setOption] = useState(\"\");\n\n  const [alloption, setAllOption] = useState([]);\n\n  const [checkbox, setCheckbox] = useState(\"\");\n\n  const [allcheckbox, setAllCheckbox] = useState([]);\n  const [image, setImage] = useState(null);\n  \n\n  const handleDeleteOption = (i) => {\n    if (props.type == \"radio\") {\n      const arr = alloption.filter((value, index) => {\n        if (index !== i) {\n          return value;\n        }\n      });\n\n      setAllOption(arr);\n    } else {\n      const arr = allcheckbox.filter((value, index) => {\n        if (index !== i) {\n          return value;\n        }\n      });\n\n      setAllCheckbox(arr);\n    }\n  };\n\n  if (props.type === \"radio\") {\n    return (\n      <>\n        {alloption.map((value, index) => {\n          return (\n            <>\n              <div className=\"my-3\">\n                <input type={\"radio\"} />\n                <input\n                  type=\"text\"\n                  className=\"input-form mx-3\"\n                  id=\"inputEmail4\"\n                  placeholder=\"Option\"\n                  style={{\n                    border: \"none\",\n                    borderBottom: \"1px light black\",\n                    width: \"60%\",\n                  }}\n                  value={value}\n                ></input>\n                <button\n                  className=\"btn \"\n                  onClick={() => {\n                    handleDeleteOption(index);\n                  }}\n                >\n                  <p className=\"text-danger\">X</p> \n                </button>\n              </div>\n            </>\n          );\n        })}\n        <div className=\"my-3\">\n          <input type={\"radio\"} />\n          <input\n            type=\"text\"\n            className=\"input-form mx-3\"\n            id=\"inputEmail4\"\n            placeholder=\"Option\"\n            value={option}\n            style={{\n              border: \"none\",\n              borderBottom: \"1px light black\",\n              width: \"60%\",\n            }}\n            onChange={(e) => {\n              setOption(e.target.value);\n            }}\n          ></input>\n          <br />\n          <button\n            className=\"btn text-success my-2\"\n            style={{ border: \"none\", backgroundColor: \"transparent\" }}\n            onClick={() => {\n              setAllOption([...alloption, option]);\n              setOption(\"\");\n            }}\n          >\n            + Save Option\n          </button>\n        </div>\n        <button\n          style={{\n            float: \"right\",\n            backgroundColor: \"transparent\",\n            border: \"none\",\n            color: \"\",\n            fontSize: \"20px\",\n          }}\n          className=\"text-success opacity-75\"\n          onClick={() => {\n            props.handleSave(alloption);\n            setOption(\"\");\n            setAllOption([]);\n          }}\n        >\n          + Add Question\n        </button>\n      </>\n    );\n  } else if (props.type === \"text\") {\n    return (\n      <>\n        <div className=\"my-3\">\n          <textarea\n            className=\"form-control\"\n            id=\"exampleFormControlTextarea1\"\n            rows=\"3\"\n            value=\"\"\n          ></textarea>\n          <button\n            style={{\n              float: \"right\",\n              backgroundColor: \"transparent\",\n              border: \"none\",\n              color: \"blue\",\n              fontSize: \"20px\",\n            }}\n            onClick={() => {\n              props.handleSave([]);\n            }}\n          >\n            + Add Question\n          </button>\n        </div>\n      </>\n    );\n  }\n  \n\n  return (\n    <>\n      {allcheckbox.map((value, index) => {\n        return (\n          <>\n            <div className=\"my-3\">\n              <input type={\"checkbox\"} />\n              <input\n                type=\"text\"\n                className=\"input-form mx-3\"\n                id=\"inputEmail4\"\n                placeholder=\"Option\"\n                style={{\n                  border: \"none\",\n                  borderBottom: \"1px light black\",\n                  width: \"60%\",\n                }}\n                value={value}\n              ></input>\n              <button\n                style={{\n                  color: \"red\",\n                  border: \"none\",\n                  backgroundColor: \"transparent\",\n                }}\n                onClick={() => {\n                  handleDeleteOption(index);\n                }}\n              >\n                X\n              </button>\n            </div>\n          </>\n        );\n      })}\n      <div className=\"my-3\">\n        <div className=\"my-3\">\n          <input type={\"checkbox\"} />\n          <input\n            type=\"text\"\n            className=\"input-form mx-3\"\n            id=\"inputEmail4\"\n            placeholder=\"Option\"\n            value={checkbox}\n            style={{\n              border: \"none\",\n              borderBottom: \"1px light black\",\n              width: \"60%\",\n            }}\n            onChange={(e) => {\n              setCheckbox(e.target.value);\n            }}\n          ></input>\n          <br />\n          <button\n            className=\"btn text-primary my-2\"\n            style={{ border: \"none\", backgroundColor: \"transparent\" }}\n            onClick={() => {\n              setAllCheckbox([...allcheckbox, checkbox]);\n              setCheckbox(\"\");\n            }}\n          >\n            + Save Checkbox\n          </button>\n          <br />\n          <button\n            style={{\n              float: \"right\",\n              backgroundColor: \"transparent\",\n              border: \"none\",\n              color: \"blue\",\n              fontSize: \"20px\",\n            }}\n            onClick={() => {\n              props.handleSave(allcheckbox);\n              setAllCheckbox([]);\n              setCheckbox(\"\");\n            }}\n          >\n            + Add Question\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useState,useEffect } from \"react\";\nimport Question from \"./Question\";\nimport { decode as atob } from \"base-64\";\nimport { useHistory } from \"react-router-dom\";\n\n\nexport default function CreateTest() {\n\n  let history = useHistory();\n\n  const [question, setQuestion] = useState(\"\");\n\n  const [test, setTest] = useState({});\n\n  const [authorid,setAuthorid] = useState(0);\n\n  const [ques, setQues] = useState([]);\n\n  const [type, setType] = useState(\"radio\");\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      var user = JSON.parse(atob(token.split(\".\")[1]));\n      if (!user) {\n        localStorage.removeItem(\"token\");\n        console.log(user, \"Yo it is not user\");\n        history.push(\"/login\");\n      } else {\n        setAuthorid(user.id);\n      }\n    } else {\n      alert(\"You Are not logged In\");\n      history.push(\"/login\");\n    }\n  }, []);\n\n  const handlePublish = () => {\n    test.question = ques;\n    test.authorid = authorid;\n    setTest(test);\n\n    fetch('/addform',{\n      method : \"POST\",\n      headers : {\n        \"Content-Type\" : \"application/json\"\n      },\n      body : JSON.stringify(test)\n    }).then((res) => {\n      return res.json()\n    }).then((data) => {\n      const hostname = window.location.host;\n      \n      const formlink = `http://${hostname}/fillingform/${data.formid}`\n\n      alert(`Your form is visible at ${formlink} or you can see it at home by doing showpreview`);\n    })\n  };\n  \n  const handleChange = (e) => {\n    if (e.target.name === \"title\") {\n      test.formtitle = e.target.value;\n    } else if (e.target.name === \"description\") {\n      test.formdescription = e.target.value;\n    }\n\n    setTest(test);\n  };\n\n  const handleSave = (option) => {\n    if (type == \"text\") {\n      const newQuestion = {\n        question: question,\n        type: type,\n      };\n\n      setQuestion(\"\");\n      setQues([...ques, newQuestion]);\n    } else {\n      const newQuestion = {\n        question: question,\n        type: type,\n        options: option,\n      };\n\n      setQuestion(\"\");\n      setQues([...ques, newQuestion]);\n    }\n  };\n\n  const handleDeleteQuestion = (i) => {\n    const arr = ques.filter((value, index) => {\n      if (index !== i) {\n        return value;\n      }\n    });\n\n    setQues(arr);\n  };\n\n  return (\n    <>\n    <div>\n      <div className=\"container-fluid\">\n        <br />\n        <div class=\"card mx-auto my-3 text-light\" style={{ width: \"60%\" }}>\n          <div class=\"card-body\">\n            <div className=\"my-3\">\n              <input\n                type=\"text\"\n                className=\"form-control input-question opacity-50 \"\n                name=\"title\"\n                id=\"inputEmail4\"\n                placeholder=\"Form Title\"\n                style={{\n                  border: \"none\",\n                  borderBottom: \"1px light black\",\n                  height: \"100px\",\n                  width: \"100%\",\n                }}\n                onChange={(e) => {\n                  handleChange(e);\n                }}\n              ></input>\n            </div>\n            <div className=\"my-3\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"inputEmail4\"\n                placeholder=\"Form Description\"\n                name=\"description\"\n                style={{ border: \"none\", borderBottom: \"1px light black\" }}\n                onChange={(e) => {\n                  handleChange(e);\n                }}\n              ></input>\n            </div>\n          </div>\n        </div>\n\n        {ques.map((value, index) => {\n          if (value.type === \"text\") {\n            return (\n              <div\n                className=\"card mx-auto my-3 text-light\"\n                style={{ width: \"60%\" }}\n              >\n                <div class=\"card-body\">\n                  <div className=\"my-3\">\n                    <p\n                      className=\"text-dark\"\n                      style={{ fontSize: \"20px\", fontWeight: \"lighter\" }}\n                    >\n                      {value.question}\n                    </p>\n                    <textarea\n                      class=\"form-control\"\n                      id=\"exampleFormControlTextarea1\"\n                      rows=\"3\"\n                      value=\"\"\n                    ></textarea>\n                    <button\n                      className=\"btn btn-outline-danger my-2\"\n                      style={{ float: \"right\" }}\n                      onClick={() => {\n                        handleDeleteQuestion(index);\n                      }}\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              </div>\n            );\n          } else {\n            return (\n              <div\n                className=\"card mx-auto my-3 text-light\"\n                style={{ width: \"60%\" }}\n              >\n                <div class=\"card-body\">\n                  <div className=\"my-3\">\n                    <p\n                      className=\"text-dark\"\n                      style={{ fontSize: \"20px\", fontWeight: \"lighter\" }}\n                    >\n                      {value.question}\n                    </p>\n                    {value.options.map((newvalue, index) => {\n                      return (\n                        <div className=\"my-3\">\n                          <input type={value.type} name={value.question} />\n                          <label\n                            className=\"text-dark mx-2\"\n                            style={{ fontSize: \"20px\", fontWeight: \"lighter\" }}\n                          >\n                            {newvalue}\n                          </label>\n                        </div>\n                      );\n                    })}\n                    <button\n                      className=\"btn btn-outline-danger \"\n                      style={{ float: \"right\" }}\n                      onClick={() => {\n                        handleDeleteQuestion(index);\n                      }}\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n              </div>\n            );\n          }\n        })}\n        <div className=\"card mx-auto my-3 text-light\" style={{ width: \"60%\" }}>\n          <div class=\"card-body\">\n            <div className=\"my-3\">\n              <input\n                type=\"text\"\n                className=\"input-form\"\n                id=\"inputEmail4\"\n                placeholder=\"Enter Question\"\n                value={question}\n                style={{\n                  border: \"none\",\n                  borderBottom: \"1px light black\",\n                  height: \"50px\",\n                  width: \"70%\",\n                }}\n                onChange={(e) => {\n                  setQuestion(e.target.value);\n                }}\n              ></input>\n              <button\n                className=\"btn  dropdown-toggle mx-2\"\n                style={{backgroundColor:'#003366',color:'white'}}\n                type=\"button\"\n                id=\"dropdownMenuButton\"\n                data-toggle=\"dropdown\"\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n              >\n                Change Type\n              </button>\n              <div\n                className=\"dropdown-menu\"\n                aria-labelledby=\"dropdownMenuButton\"\n              >\n                <button\n                  className=\"dropdown-item\"\n                  onClick={() => {\n                    setType(\"radio\");\n                  }}\n                >\n                  Mcq\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  onClick={() => {\n                    setType(\"text\");\n                  }}\n                >\n                  Text Area\n                </button>\n                <button\n                  className=\"dropdown-item\"\n                  onClick={() => {\n                    setType(\"checkbox\");\n                  }}\n                >\n                  Checkbox\n                </button>\n              </div>\n            </div>\n            <Question type={type} handleSave={handleSave} />\n          </div>\n        </div>\n        <br />\n        <div\n          className=\"card mx-auto my-3 text-light\"\n          style={{\n            width: \"60%\",\n            backgroundColor: \"rgb(232, 232, 255)\",\n            border: \"none\",\n          }}\n        >\n          <button\n            className=\"btn  mx-auto\"\n            style={{ width: \"100%\",backgroundColor:'#003366',color:'white' }}\n            onClick={handlePublish}\n          >\n            Publish\n          </button>\n        </div>\n      </div>\n      </div>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport validator from \"validator\";\nimport ReactLoading from \"react-loading\";\n\n const Form = () => {\n  const { id } = useParams();\n\n  const [responses,setResponses] = useState([]);\n\n  const [email,setEmail] = useState(\"\");\n\n  const [loading,setLoading] = useState(true);\n\n  const [form, setForm] = useState({});\n\n  const handleSubmit = () => {\n    if(validator.isEmail(email)){\n      fetch('/submitAnswers',{\n                method : \"POST\",\n                headers : {\n                    \"Content-Type\" : \"application/json\"\n                },\n                body : JSON.stringify({id : id,response : {email : email,answer : responses}})\n            }).then((response) => {\n                return response.json();\n            }).then((data) => {\n                alert(\"your response has been submitted\");\n            })\n    }else {\n      const error = document.getElementById(\"error\")\n      error.style.display = \"block\";\n    }\n  }\n\n  useEffect(() => {\n     fetch(\"/fillform\",{\n       method : \"POST\",\n       headers : {\n         \"Content-Type\" : \"application/json\"\n       },\n       body : JSON.stringify({id : id})\n     }).then((res) => {\n         return res.json();\n     }).then((data) => {\n          setForm(data.form)\n          console.log(form)\n          setLoading(false)    \n     })\n  },[])\n\n  const handleResponse = (value,index,type) => {\n    if(type === \"checkbox\"){\n        if(typeof(responses[index]) == \"undefined\"){\n          responses[index] = [value]\n\n          setResponses(responses)\n\n          console.log(responses)\n        }else{\n        if(responses[index].includes(value)){\n            const i = responses[index].indexOf(value);\n\n            const newarray = responses[index].splice(i,1);\n\n            responses[index] = newarray;\n\n            setResponses(responses);\n\n            console.log(responses)\n        }else{\n            responses[index].push(value);\n\n            setResponses(responses)\n\n            console.log(responses)\n        }\n      }\n    }else{\n        responses[index] = value;\n\n    setResponses(responses);\n\n    console.log(responses);\n    }\n  }\n  if(loading){\n      return(\n        <div className=\"container-fluid\">\n          <ReactLoading type=\"spin\" color=\"#0000FF\"\n          height={100} width={50}/>\n          <h1>Loading...</h1>\n        </div>\n      )\n  }else{\n  return (\n    <div className=\"container-fluid\">\n      <div class=\"card mx-auto my-3 text-light\" style={{ width: \"60%\" }}>\n        <div class=\"card-body\">\n          <div className=\"my-3\">\n            <p style={{ fontSize: \"65px\", color: \"black\", fontWeight: \"100\" }}>\n              {form.formtitle}\n            </p>\n          </div>\n          <div className=\"my-3\">\n            <p style={{ fontSize: \"20px\", color: \"black\", fontWeight: \"100\" }}>\n              {form.formdescription}\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"card mx-auto my-3 text-light\" style={{ width: \"60%\" }}>\n        <div class=\"card-body\">\n          <div className=\"my-3\">\n            <p style={{ fontSize: \"20px\", color: \"black\", fontWeight: \"100\" }}>\n              Email Id <span style={{ color: \"red\" }}>*</span>\n            </p>\n            \n            <p id=\"error\" style={{display : \"none\",fontSize: \"15px\", color: \"red\", fontWeight: \"100\" }}>\n              Fill A valid email id .......\n            </p>\n            <input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"inputEmail4\"\n              placeholder=\"John@example.com\"\n              name=\"description\"\n              style={{\n                border: \"1px solid black\",\n                borderBottom: \"1px light black\",\n              }}\n              onChange = {(e) => {setEmail(e.target.value)}}\n            ></input>\n          </div>\n        </div>\n      </div>\n\n      {form.question.map((value, index) => {\n        if (value.type === \"text\") {\n          return (\n            <div class=\"card mx-auto my-3 text-light\" style={{ width: \"60%\" }}>\n              <div class=\"card-body\">\n                <p\n                  style={{\n                    fontSize: \"25px\",\n                    color: \"black\",\n                    fontWeight: \"100\",\n                  }}\n                >\n                  {value.question}\n                </p>\n                <textarea\n                  class=\"form-control\"\n                  id=\"exampleFormControlTextarea1\"\n                  rows=\"3\"\n                  onChange = {(e) => handleResponse(e.target.value,index,value.type)}\n                ></textarea>\n              </div>\n            </div>\n          );\n        } else {\n          return (\n            <div class=\"card mx-auto my-3 text-light\" style={{ width: \"60%\" }}>\n              <div class=\"card-body\">\n                <div className=\"my-3\">\n                  <p\n                    style={{\n                      fontSize: \"25px\",\n                      color: \"black\",\n                      fontWeight: \"100\",\n                    }}\n                  >\n                    {value.question}\n                  </p>\n                </div>\n\n                {value.options.map((value1, i) => {\n                  return (\n                    <div className=\"my-3\">\n                      <input type={value.type} name={index} value = {i} onClick = {(e) => handleResponse(e.target.value,index,value.type)}/>\n                      <label\n                        className=\"mx-3\"\n                        style={{\n                          fontSize: \"20px\",\n                          color: \"black\",\n                          fontWeight: \"100\",\n                        }}\n                      >\n                        {value1}\n                      </label>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          );\n        }\n      })}\n      <br/>\n      <div\n          className=\"card mx-auto my-3 text-light\"\n          style={{\n            width: \"60%\",\n            backgroundColor: \"rgb(232, 232, 255)\",\n            border: \"none\",\n          }}\n        >\n          <button\n            className=\"btn btn-primary mx-auto\"\n            style={{ width: \"100%\" }}\n            onClick={handleSubmit}\n          >\n            Submit\n          </button>\n        </div>\n    </div>\n  );\n}\n}\n\n\nexport default Form","import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\nimport Navbar from \"./components/Navbar\"\nimport React,{useState} from 'react'\nimport { BrowserRouter,Switch,Route} from \"react-router-dom\";\nimport Home from \"./components/Home\"\nimport Dashboard from \"./components/Dashboard\";\nimport Register from \"./components/Register\"\nimport Login from \"./components/Login\"\nimport CreateTest from \"./components/CreateTest\";\nimport Form from \"./components/Form\";\n\nexport default function App() {\n\n    const [login,setLogin] = useState(0);\n    \n    const handleLogin = () => {\n      setLogin(login+1)\n    }\n\n    return(\n      <BrowserRouter>\n      <Switch>\n          <Route path = \"/fillingform/:id\"><Form /></Route>\n          <div>\n          <Navbar login = {login} />  \n          <Route exact path = \"/\"><Home/></Route>\n          <Route exact path = \"/home\"><Dashboard /></Route>\n          <Route exact path = \"/CreateTest\"><CreateTest/></Route>\n          <Route exact path = \"/login\"><Login handleLogin={handleLogin}/></Route>\n          <Route exact path = \"/register\"><Register/></Route>\n          </div>\n      </Switch>    \n      </BrowserRouter>\n    )\n  }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}